apply plugin: 'java'
apply plugin: 'application'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "io.freefair.lombok"

// artifact properties
version = '0.1-SNAPSHOT'
mainClassName = 'com.cqhaorun.hao.iot.aivs.TimerJob'
description = """Flink Job"""

ext {
    javaVersion = '1.8'
    flinkVersion = '1.9.1'
    scalaBinaryVersion = '2.12'
    slf4jVersion = '1.7.7'
    log4jVersion = '1.2.17'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

applicationDefaultJvmArgs = ["-Dlog4j.configuration=log4j.properties"]

//task wrapper(type: Wrapper) {
//    gradleVersion = '3.1'
//}

// declare where to find the dependencies of your project
repositories {
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
    maven { url "https://jitpack.io" }
    mavenCentral()
    maven { url "https://repository.apache.org/content/repositories/snapshots/" }
}

// 注意：我们不能使用 "compileOnly" 或者 "shadow" 配置，这会使我们无法在 IDE 中或通过使用 "gradle run" 命令运行代码。
// 我们也不能从 shadowJar 中排除传递依赖（请查看 https://github.com/johnrengelman/shadow/issues/159)。
// -> 显式定义我们想要包含在 "flinkShadowJar" 配置中的类库!
configurations {
    flinkShadowJar // dependencies which go into the shadowJar

    // 总是排除这些依赖（也来自传递依赖），因为 Flink 会提供这些依赖。
    flinkShadowJar.exclude group: 'org.apache.flink', module: 'force-shading'
    flinkShadowJar.exclude group: 'com.google.code.findbugs', module: 'jsr305'
    flinkShadowJar.exclude group: 'org.slf4j'
    flinkShadowJar.exclude group: 'log4j'
    //无用的传递依赖，移除来减小jar大小
    flinkShadowJar.exclude group: 'org.springframework.cloud'
    flinkShadowJar.exclude group: 'com.baomidou'
    flinkShadowJar.exclude group: 'org.mybatis'
}

// make compileOnly dependencies available for tests:
sourceSets {
    main.compileClasspath += configurations.flinkShadowJar
    main.runtimeClasspath += configurations.flinkShadowJar

    test.compileClasspath += configurations.flinkShadowJar
    test.runtimeClasspath += configurations.flinkShadowJar

    javadoc.classpath += configurations.flinkShadowJar
}

configurations.all {
    exclude group: "log4j"
    exclude group: "org.slf4j", module: "slf4j-log4j12"
}

// declare the dependencies for your production and test code
dependencies {
    // --------------------------------------------------------------
    // 编译时依赖不应该包含在 shadow jar 中，
    // 这些依赖会在 Flink 的 lib 目录中提供。
    // --------------------------------------------------------------
    compile("org.apache.flink:flink-java:${flinkVersion}") {
        exclude group: "log4j"
        exclude group: "org.slf4j", module: "slf4j-log4j12"
    }
    compile ("org.apache.flink:flink-streaming-java_${scalaBinaryVersion}:${flinkVersion}"){
        exclude group: "log4j"
        exclude group: "org.slf4j", module: "slf4j-log4j12"
    }

    // --------------------------------------------------------------
    // 应该包含在 shadow jar 中的依赖，例如：连接器。
    // 它们必须在 flinkShadowJar 的配置中！
    // --------------------------------------------------------------
    flinkShadowJar "org.apache.flink:flink-connector-kafka_${scalaBinaryVersion}:${flinkVersion}"
    flinkShadowJar "org.apache.flink:flink-connector-wikiedits_${scalaBinaryVersion}:${flinkVersion}"

    //jackson相关
    flinkShadowJar "com.fasterxml.jackson.datatype:jackson-datatype-json-org:$jacksonVersion"
    flinkShadowJar "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    flinkShadowJar "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    //flinkShadowJar 'com.fasterxml.jackson.datatype:jackson-datatype-joda'
    flinkShadowJar "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    flinkShadowJar "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    flinkShadowJar "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"
    flinkShadowJar "com.fasterxml.jackson.module:jackson-module-afterburner:$jacksonVersion"

    flinkShadowJar 'org.yaml:snakeyaml:1.25'

    compile 'org.apache.flink:flink-shaded-hadoop2-uber:2.4.1-1.8.2'

    compile "org.apache.flink:flink-statebackend-rocksdb_${scalaBinaryVersion}:${flinkVersion}"
    compile "log4j:log4j:${log4jVersion}"
    compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"

    compile 'ch.qos.logback:logback-core:1.2.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'org.slf4j:log4j-over-slf4j:1.7.29'

    compile 'org.postgresql:postgresql:42.2.8'

    // Add test dependencies here.
    testCompile "junit:junit:4.12"

}

run.classpath = sourceSets.main.runtimeClasspath

jar {
    manifest {
        attributes 'Built-By': System.getProperty('user.name'),
                'Build-Jdk': System.getProperty('java.version')
    }
}

shadowJar {
    configurations = [project.configurations.flinkShadowJar]
}